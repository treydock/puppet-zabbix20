# UserParameter checks for FhGFS

# fhgfs.client.status
#
# Returns:
#   1 - If fhgfs client is loaded
#   0 - If fhgfs client is not loaded
#
UserParameter=fhgfs.client.status,test -f /proc/fs/fhgfs/*/.status && echo "1" || echo "0"

# fhgfs.list_unreachable
#
# Arguments:
#   None
#
# Returns:
#   If servers are unreachable, returns a comma delimited list of their nodeIDs 
#
UserParameter=fhgfs.list_unreachable,fhgfs-check-servers | grep UNREACHABLE | sed -r -e 's/^(.*)\s+\[.*\]:\s+UNREACHABLE/\1/g' | paste -sd ","

<% ['management','metadata','storage','client'].each do |type| -%>
# fhgfs.<%= type %>.reachable
#
# Arguments:
#   1 - nodeID
#
# Returns:
#   1 - reachable
#   0 - unreachable
#
UserParameter=fhgfs.<%= type %>.reachable[*],fhgfs-ctl --listnodes --reachable --nodetype=<%= type %> | grep -A1 '^$1 \[' | grep -c "Reachable: <yes>"

<% end -%>

# fhgfs.pool.status
#
# Arguments:
#   1 - nodeNumID
#   2 - nodeType
#
# Returns:
#   pool status string of "normal", "low", or "emergency"
#
UserParameter=fhgfs.pool.status[*],fhgfs-ctl --listpools --nodetype=$2 | sed -r -n -e 's|^\s+$1+\s+\[(.*)\]$|\1|p'

# fhgfs.client.num
#
# Arguments:
#   None
#
# Returns:
#  Number of registered FhGFS clients
#
UserParameter=fhgfs.client.num,fhgfs-ctl --listnodes --nodetype=client | wc -l

# fhgfs.metadata.iostat
#
# Arguments:
#   1 - nodeNumID
#   2 - type (reqs, qlen or bsy)
#   3 - history (10-60)
#
# Returns:
#   iostat average over 'history' for 'type'
#
UserParameter=fhgfs.metadata.iostat[*],<%= @metadata_iostat_path %> $1 $2 $3